#include <BL99.h>

// интервал для генерации случайной температуры
#defint TIME 3000
unsigned long time = 0;

// инициализируем датчики для отправки
// пин, подключенный к DATA на передатчике, тип эмулируемго датчика, канал, ID датчика (по умолчанию 1)
BL99 sensor990(2, BL990, 2);
BL99 sensor999(2, BL999, 1);


void setup() {
  Serial.begin(115200);
  randomSeed(analogRead(0));
  // можно отправлять, указывая следующие параметры через запятую:
  // только температуру
  // sensor990.send(24.2);
  // температуру и влажность
  // sensor999.send(24.2, 54);
  // температуру, состояние батареи и сигнал при приёме
  sensor990.send(24.2, 0, 1);
  // температуру, влажность, состояние батареи и сигнал при приёме
  sensor999.send(24.2, 54, 0, 1);
  // при использовании send(), данные отправляются сразу, не записываясь в память библиотеки

  // есть возможность изменить интервал отправки (в мс), но это имеет смысл только для датчиков BL990,
  // потому что метеостанции, работающие с BL999 включают прием сигнала только
  // в нужный момент и в остальное время не слушают эфир
  // sensor990.setInterval(30000);
}

void loop() {
  // раз в промужуток времени, равный time
  if (millis() >= time) {
    // генерируем случайное число
    float temp = random(-450, 450) / 10.0;
    // отображаем его в терминале
    Serial.println(temp, 1);
    // передаём в библиотеку для дальнейшей передачи в цикле
    // передать можно
    // температуру
    sensor990.setTemp(temp);
    sensor999.setTemp(temp);
    // влажность
    // sensor999.setHumi(humi);
    // статус батареи
    // sensor990.setBat(bat);
    // сигнал при приёме
    // sensor990.setBip(nip);
    // все параметры сразу
    // sensor999.set(temp, humi, bat, bip);
    // в дальнейшем эти параметры будут передаваться по таймеру
    time = millis() + TIME;
  }
  // запускаем функции в цикле, чтобы при наступлении нужного интервала отправить данные
  sensor990.loop();
  sensor999.loop();
}
